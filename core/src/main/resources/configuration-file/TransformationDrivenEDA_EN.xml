<?xml version="1.0" encoding="UTF-8"?><!-- 

Language: English

EDA: EditDistanceEDA

Description: Given a certain configuration (i.e. the configuration file), the edit distance EDA can be 
trained over a specific data set (i.e. trainDir) in order to optimize its performance (i.e. accuracy or
F1 measure). In the training phase the EDA produces a distance model for the data set, which includes a
distance threshold that best separates the positive and negative examples in the training data. The calculated
threshold is then saved in the configuration file itself. During the test phase the configuration file
is read and the reported threshold used so that T-H pairs resulting in a distance below the threshold are
classified as ENTAILMENT, while pairs above the threshold are classified as NONENTAILMENT. 

EditDistanceEDA uses the weights of the 3 different edit distance operations (i.e. delete, insert, substitute)
reported in the configuration file to calculate the distance between T and H. To calculate this distance 
EditDistance can use either the FixedWeightTokenEditDistance or FixedWeightLemmaEditDistance component.
FixedWeightTokenEditDistance calculates the distance between T and H by using the tokens whereas FixedWeightLemmaEditDistance
uses the lemma of the tokens (in this case a pipeline producing the lemma had to be used for preprocessing the data set).
In addition FixedWeightTokenEditDistance and FixedWeightLemmaEditDistance can exploit external resources like
WordNet and Wikipedia.

From the configuration file it is possible to select different instances of EditDistanceEDA; this is done
by selecting the component to be used (i.e. FixedWeightTokenEditDistance or FixedWeightLemmaEditDistance) and
then one of the available configurations of the selected component (e.g. basic, wordnet, wikipedia).

Basically the configuration file represents a single experiment where information about the used EDA, its
parameters, the data set used to calculate the threshold and the threshold itself are all available. Sharing
a configuration file means allowing other users to replicate the same experiment under the same condition.

--><configuration>


    <!-- Platform configuration section; the information in this section is used by the EOPRunner class being
    able to perform both the processing of the data set and running the EDA -->
	<section name="PlatformConfiguration">
		<!-- The EDA to be used: EditDistanceEDA -->
		<property name="activatedEDA">eu.excitementproject.eop.core.TransformationDrivenEDA</property>
		<!-- The language: [EN] -->
		<property name="language">EN</property>
		<!-- The linguistic annotation pipeline to preprocess the data to be annotated: [MaltParserEN] -->
		<property name="activatedLAP">eu.excitementproject.eop.lap.dkpro.MaltParserEN</property>
	</section>
	
	
	<!-- FixedWeightTreeEditDistance to calculate the distance between each pair T-H -->
	<section name="eu.excitementproject.eop.core.component.distance.FixedWeightTreeEditDistance">
	    
	    <!-- The configuration to be used by the component: [basic] -->
	    <property name="instances">basic</property>
	  
		<!-- This configuration uses LexicalAligner -->
		<subsection name="basic">
		    <!-- The liexical aligner component to do the matches between the tokens -->
			<property name="alignment-component">eu.excitementproject.eop.core.component.alignment.lexicallink.LexicalAligner</property>
		    
		    <!-- The configuration file of the aligner component -->
		    <property name="configuration-file">./src/main/resources/configuration-file/TreeEditDistance_LexicalAligner_EN.xml</property>
		    
		    <!-- The file containing your own alignments; the file has to be in this format: token1_pos \t token2_pos, e.g.
		    
		    animal_NN       dog_NN
            beside_IN       near_IN
            
            Empty value for not set  -->
		    -->
		    <!-- <property name="user-alignments"></property> -->
		    <property name="user-alignments">/hardmnt/norris0/zanoli/TBMLEDA/dataset/user-alignments.txt</property>
		    
		    
		    <!-- The verbosity level: [INFO|FINE|FINER] -->
		    <property name="verbosity-level">INFO</property>
		    <!-- <property name="verbosity-level">FINE</property> -->
		    <!-- <property name="verbosity-level">FINER</property> -->
		</subsection>
		
	</section>	
	
	<!-- EditDistanceBasicEDA uses the weights in the configuration file to calculate the entailment -->
	<section name="eu.excitementproject.eop.core.TransformationDrivenEDA">
	
	    <!-- D A T A S E T S -->
	
	    <!-- The training data set -->
		<property name="trainDir">/hardmnt/norris0/zanoli/TBMLEDA/tmpfiles/</property> 
		<!-- The test data set -->
		<property name="testDir">/tmp/test/</property>
		
		
		<!-- C L A S S I F I E R S -->
		
		<!-- 
		<property name="classifier">weka.classifiers.trees.DecisionStump</property>
		<property name="classifier-model">/hardmnt/norris0/zanoli/TBMLEDA/dataset/DecisionStump.model</property>
		-->
		
		<!-- 
		<property name="classifier">weka.classifiers.bayes.NaiveBayes</property>
		<property name="classifier-model">/hardmnt/norris0/zanoli/TBMLEDA/dataset/NaiveBayes.model</property>
		-->
		
		<!--
		<property name="classifier">weka.classifiers.trees.J48</property>
		<property name="classifier-parameters">-C 0.25 -M 2</property>
		<property name="classifier-model">/hardmnt/norris0/zanoli/TBMLEDA/dataset/J48.model</property> 
		-->
		
		<property name="classifier">weka.classifiers.functions.SMO</property>
		<property name="classifier-parameters">-C 1.0 -L 0.001 -P 1.0E-12 -N 0 -V -1 -W 1 -K weka.classifiers.functions.supportVector.PolyKernel -C 250007 -E 1.0</property>
		<property name="classifier-model">/hardmnt/norris0/zanoli/TBMLEDA/dataset/SMO.model</property>
		
		<!--
		<property name="classifier">weka.classifiers.meta.Vote</property>
		<property name="classifier-parameters">-S 1 -B weka.classifiers.functions.SMO -C 1.0 -L 0.001 -P 1.0E-12 -N 0 -V -1 -W 1 -K weka.classifiers.functions.supportVector.PolyKernel -C 250007 -E 1.0 -B weka.classifiers.trees.J48 -C 0.25 -M 2 -R AVG</property>
		<property name="classifier-model">/hardmnt/norris0/zanoli/TBMLEDA/dataset/Vote.model</property>
		-->
		
		<!-- Enable 10-fold-cross-validation on the training data set: [true|false] -->
		<property name="cross-validation">true</property>
		
		<!-- Save the training data set into arff format to let one use the WEKA experimenter tool;
		empty value for not set  -->
		<property name="save-arff-format">/tmp/data.arff</property>
		<!-- <property name="save-training-dataset-into-arff-format"></property> -->
		
		<!-- The verbosity level: [INFO|FINE|FINER] -->
		<property name="verbosity-level">INFO</property>
		<!-- <property name="verbosity-level">FINE</property> -->
		<!-- <property name="verbosity-level">FINER</property> -->
		
		<!-- component to be used by EDA: [FixedWeightTreeEditDistance] 
		FixedWeightLemmaEditDistance can be used only when the preprocessing pipeline provides lemmas-->
	    <property name="components">eu.excitementproject.eop.core.component.distance.FixedWeightTreeEditDistance</property>
	    
		<!-- Transformations are used as features by the EDA. Decide which type of transformation
		the EDA has to use: match, replacement, insertion, or deletion -->
		<property name="transformations">replacement,insertion,deletion</property>
		<!-- <property name="transformations">replacement,insertion</property> -->
		<!-- ......................  -->
		<!-- <property name="transformations">deletion</property> -->
		
		<!-- If the punctuation has to be removed: [true|false] -->
		<property name="punctuation-removal">true</property>
		<!-- <property name="punctuation-removal">false</property> -->
		
	</section>
	
</configuration>
